{
  "common": {
    "loading": "Loading...",
    "error": "Error",
    "success": "Success",
    "cancel": "Cancel",
    "confirm": "Confirm",
    "save": "Save",
    "delete": "Delete",
    "edit": "Edit",
    "close": "Close",
    "back": "Back",
    "next": "Next",
    "previous": "Previous",
    "search": "Search",
    "loadingTechnologies": "Loading technologies...",
    "availableTechnologies": "Available Technologies",
    "clickToStart": "Click on a technology to start the quiz",
    "quizAvailable": "Quiz available",
    "noTechnologyFound": "No technology found for",
    "noTechnologyAvailable": "No technology available"
  },
  "navigation": {
    "home": "Home",
    "quiz": "Quiz",
    "dashboard": "Dashboard",
    "profile": "Profile",
    "settings": "Settings",
    "logout": "Logout"
  },
  "auth": {
    "login": "Log In",
    "register": "Sign Up",
    "username": "Username",
    "password": "Password",
    "email": "Email",
    "fullName": "Full Name",
    "loginButton": "Login",
    "registerButton": "Register",
    "loginError": "Invalid credentials",
    "registerError": "Registration error",
    "connectionError": "Server connection error",
    "tokenError": "Session expired, please log in again",
    "switchToRegister": "No account? Sign up",
    "switchToLogin": "Already have an account? Log in",
    "requiredField": "This field is required",
    "passwordMinLength": "Password must be at least 6 characters long"
  },
  "quiz": {
    "title": "IT Quiz",
    "selectTechnology": "Select a technology",
    "startQuiz": "Start Quiz",
    "question": "Question {{number}} of {{total}}",
    "score": "Score: {{score}}/{{total}}",
    "percentage": "{{percentage}}%",
    "timeRemaining": "Time remaining: {{time}}",
    "submit": "Submit Answer",
    "nextQuestion": "Next Question",
    "finishQuiz": "Finish Quiz",
    "results": "Results",
    "correctAnswer": "Correct!",
    "wrongAnswer": "Wrong Answer",
    "explanation": "Explanation",
    "questionsCompleted": "{{completed}} questions completed",
    "finalScore": "Final Score: {{score}}/{{total}} ({{percentage}}%)",
    "excellent": "Excellent!",
    "good": "Well done!",
    "needImprovement": "Keep practicing!",
    "restartQuiz": "Restart",
    "backToHome": "Back to Home",
    "difficulty": "Difficulty",
    "category": "Category",
    "confirmQuit": "Are you sure you want to quit? Your progress will be lost."
  },
  "technologies": {
    "spark": "Apache Spark",
    "docker": "Docker",
    "git": "Git",
    "javascript": "JavaScript",
    "python": "Python",
    "description": {
      "spark": "Big Data & Distributed Processing",
      "docker": "Containerization & DevOps",
      "git": "Version Control",
      "javascript": "Frontend Web Development",
      "python": "General Purpose Programming"
    }
  },
  "theme": {
    "light": "Light Mode",
    "dark": "Dark Mode",
    "toggle": "Toggle Theme",
    "systemDetection": "Auto Detection"
  },
  "language": {
    "french": "Français",
    "english": "English",
    "spanish": "Español",
    "change": "Change Language",
    "autoDetect": "Auto Detect",
    "translating": "Translating..."
  },
  "dashboard": {
    "welcome": "Welcome, {{name}}!",
    "statistics": "Statistics",
    "recentQuizzes": "Recent Quizzes",
    "totalQuizzes": "Total Quizzes",
    "averageScore": "Average Score",
    "bestScore": "Best Score",
    "timeSpent": "Time Spent",
    "favoritesTechnology": "Favorite Technology",
    "progressThisWeek": "Progress This Week",
    "noQuizzes": "No quizzes completed yet"
  },
  "errors": {
    "generic": "An unexpected error occurred",
    "network": "Network connection error",
    "timeout": "Request timeout",
    "notFound": "Resource not found",
    "unauthorized": "Unauthorized access",
    "forbidden": "Access forbidden",
    "serverError": "Internal server error"
  },
  "questions": {
    "Qu'est-ce qu'un RDD ?": "What is an RDD?",
    "Qu'est-ce qu'un RDD dans Apache Spark?": "What is an RDD in Apache Spark?",
    "Qu'est-ce qu'Apache Spark ?": "What is Apache Spark?",
    "Comment initialiser un RDD ?": "How to initialize an RDD?",
    "Quelle commande Git permet d'initialiser un nouveau dépôt ?": "Which Git command initializes a new repository?",
    "Comment ajouter des fichiers à la zone de staging ?": "How to add files to the staging area?",
    "Qu'est-ce qu'un Dockerfile ?": "What is a Dockerfile?",
    "Quelle est la différence entre une image et un conteneur Docker ?": "What is the difference between a Docker image and container?",
    "RDD (Resilient Distributed Dataset)": "RDD (Resilient Distributed Dataset)",
    "Resilient Distributed Dataset": "Resilient Distributed Dataset",
    "DataFrame": "DataFrame",
    "Dataset": "Dataset",
    "Array": "Array",
    "git init": "git init",
    "git start": "git start",
    "git create": "git create",
    "git new": "git new",
    "git add <fichier>": "git add <file>",
    "git stage <fichier>": "git stage <file>",
    "git commit <fichier>": "git commit <file>",
    "git push <fichier>": "git push <file>",
    "Un fichier texte contenant les instructions pour construire une image Docker": "A text file containing instructions to build a Docker image",
    "Un fichier de configuration pour Docker Compose": "A configuration file for Docker Compose",
    "Un fichier de logs Docker": "A Docker log file",
    "Un fichier binaire contenant une image Docker": "A binary file containing a Docker image",
    "Une image est un template en lecture seule, un conteneur est une instance exécutable de l'image": "An image is a read-only template, a container is an executable instance of the image",
    "Une image est un conteneur en cours d'exécution": "An image is a running container",
    "Il n'y a pas de différence": "There is no difference",
    "Un conteneur est un template, une image est son instance": "A container is a template, an image is its instance",
    "Les transformations modifient les données, les actions les lisent": "Transformations modify data, actions read it",
    "Les transformations sont plus rapides que les actions": "Transformations are faster than actions",
    "\"53\"": "\"53\"",
    "\"532\"": "\"532\"",
    "\"boolean\"": "\"boolean\"",
    "\"null\"": "\"null\"",
    "\"object\"": "\"object\"",
    "\"undefined\"": "\"undefined\"",
    "''.join(list_of_strings)": "''.join(list_of_strings)",
    "'from module import function' permet d'importer une fonction spécifique.": "'from module import function' permet d'importer une fonction spécifique.",
    "'with' est un gestionnaire de contexte qui ferme automatiquement le fichier, même en cas d'erreur.": "'with' est un gestionnaire de contexte qui ferme automatiquement le fichier, même en cas d'erreur.",
    "*args permet à une fonction d'accepter n'importe quel nombre d'arguments positionnels.": "*args permet à une fonction d'accepter n'importe quel nombre d'arguments positionnels.",
    "0 1 2": "0 1 2",
    "10": "10",
    "2 2 2": "2 2 2",
    "3 3 3": "3 3 3",
    "6": "6",
    "<class 'array'>": "<class 'array'>",
    "<class 'dict'>": "<class 'dict'>",
    "<class 'list'>": "<class 'list'>",
    "<class 'tuple'>": "<class 'tuple'>",
    "@property permet d'accéder à une méthode comme si c'était un attribut, utile pour les getters.": "@property permet d'accéder à une méthode comme si c'était un attribut, utile pour les getters.",
    "Accepte des arguments nommés": "Accepte des arguments nommés",
    "Accepte un nombre variable d'arguments positionnels": "Accepte un nombre variable d'arguments positionnels",
    "Array.myMethod = function() {...}": "Array.myMethod = function() {...}",
    "Array.prototype.myMethod = function() {...}": "Array.prototype.myMethod = function() {...}",
    "Avec var, la variable i est partagée. Quand setTimeout s'exécute, la boucle est terminée et i vaut 3.": "Avec var, la variable i est partagée. Quand setTimeout s'exécute, la boucle est terminée et i vaut 3.",
    "C'est une arrow function ES6 qui prend un paramètre x et retourne x multiplié par 2.": "C'est une arrow function ES6 qui prend un paramètre x et retourne x multiplié par 2.",
    "C'est une fonction lambda qui prend x en paramètre et retourne x au carré (**2).": "C'est une fonction lambda qui prend x en paramètre et retourne x au carré (**2).",
    "Calcule le carré de x": "Calcule le carré de x",
    "Calcule x puissance x": "Calcule x puissance x",
    "Ces trois méthodes permettent d'accéder à une clé sans lever d'exception si elle n'existe pas.": "Ces trois méthodes permettent d'accéder à une clé sans lever d'exception si elle n'existe pas.",
    "Comment accéder à la propriété 'name' d'un objet user de manière sécurisée?": "Comment accéder à la propriété 'name' d'un objet user de manière sécurisée?",
    "Comment accéder à une clé 'name' de manière sécurisée dans un dict?": "Comment accéder à une clé 'name' de manière sécurisée dans un dict?",
    "Comment ajouter une méthode à tous les objets Array?": "Comment ajouter une méthode à tous les objets Array?",
    "Comment empêcher le comportement par défaut d'un événement?": "Comment empêcher le comportement par défaut d'un événement?",
    "Comment importer seulement la fonction 'sqrt' du module math?": "Comment importer seulement la fonction 'sqrt' du module math?",
    "Comment importer une fonction nommée 'calculate' depuis un module?": "Comment importer une fonction nommée 'calculate' depuis un module?",
    "Convertit l'objet en array": "Convertit l'objet en array",
    "Copie toutes les propriétés dans un nouvel objet": "Copie toutes les propriétés dans un nouvel objet",
    "Crée le fichier s'il n'existe pas": "Crée le fichier s'il n'existe pas",
    "Crée un nouvel objet avec name et age": "Crée un nouvel objet avec name et age",
    "Crée une liste d'arguments": "Crée une liste d'arguments",
    "Crée une propriété statique": "Crée une propriété statique",
    "Crée une référence à l'objet": "Crée une référence à l'objet",
    "Crée une variable nommée double": "Crée une variable nommée double",
    "Crée une variable nommée lambda": "Crée une variable nommée lambda",
    "Créer des commentaires": "Créer des commentaires",
    "Déclare une fonction sans paramètres": "Déclare une fonction sans paramètres",
    "Décorer l'affichage": "Décorer l'affichage",
    "En JavaScript, typeof null retourne 'object'. C'est un bug historique qui est maintenu pour la compatibilité.": "En JavaScript, typeof null retourne 'object'. C'est un bug historique qui est maintenu pour la compatibilité.",
    "En modifiant Array.prototype, on ajoute la méthode à tous les instances d'Array existantes et futures.": "En modifiant Array.prototype, on ajoute la méthode à tous les instances d'Array existantes et futures.",
    "Extrait les propriétés name et age de l'objet user": "Extrait les propriétés name et age de l'objet user",
    "Ferme automatiquement le fichier": "Ferme automatiquement le fichier",
    "Génère une erreur": "Génère une erreur",
    "Génère une erreur de syntaxe": "Génère une erreur de syntaxe",
    "Impossible en JavaScript": "Impossible en JavaScript",
    "JavaScript convertit en string et concatène de gauche à droite: '5' + 3 = '53', puis '53' + 2 = '532'.": "JavaScript convertit en string et concatène de gauche à droite: '5' + 3 = '53', puis '53' + 2 = '532'.",
    "La destructuration permet d'extraire des valeurs d'objets ou de tableaux dans des variables distinctes.": "La destructuration permet d'extraire des valeurs d'objets ou de tableaux dans des variables distinctes.",
    "La méthode map() crée un nouveau tableau avec les résultats de l'appel d'une fonction sur chaque élément.": "La méthode map() crée un nouveau tableau avec les résultats de l'appel d'une fonction sur chaque élément.",
    "Le bloc 'finally' s'exécute toujours, qu'il y ait une exception ou non.": "Le bloc 'finally' s'exécute toujours, qu'il y ait une exception ou non.",
    "Le spread operator (...) effectue une copie superficielle des propriétés énumérables d'un objet.": "Le spread operator (...) effectue une copie superficielle des propriétés énumérables d'un objet.",
    "Les Promises sont plus rapides": "Les Promises sont plus rapides",
    "Les listes ne peuvent contenir que des nombres": "Les listes ne peuvent contenir que des nombres",
    "Les listes peuvent être modifiées après création, les tuples ne peuvent pas être modifiés.": "Les listes peuvent être modifiées après création, les tuples ne peuvent pas être modifiés.",
    "Les listes sont mutables, les tuples sont immutables": "Les listes sont mutables, les tuples sont immutables",
    "Les trois sont correctes": "Les trois sont correctes",
    "Les tuples sont plus rapides": "Les tuples sont plus rapides",
    "Modifier le comportement d'une fonction": "Modifier le comportement d'une fonction",
    "Multiplie les arguments": "Multiplie les arguments",
    "Multiplie x par 2 et retourne le résultat": "Multiplie x par 2 et retourne le résultat",
    "NaN": "NaN",
    "Object.prototype.myMethod = function() {...}": "Object.prototype.myMethod = function() {...}",
    "Optimise les performances": "Optimise les performances",
    "Optimiser le code": "Optimiser le code",
    "Pas de doublons et recherche O(1)": "Pas de doublons et recherche O(1)",
    "Permet la lecture seule": "Permet la lecture seule",
    "Peut être modifié": "Peut être modifié",
    "Plus de mémoire": "Plus de mémoire",
    "Plus rapide": "Plus rapide",
    "Pour importer une export nommée, on utilise les accolades { } dans l'instruction import.": "Pour importer une export nommée, on utilise les accolades { } dans l'instruction import.",
    "Pourquoi utiliser 'with open()' au lieu de 'open()'?": "Pourquoi utiliser 'with open()' au lieu de 'open()'?",
    "Que fait *args dans une définition de fonction?": "Que fait *args dans une définition de fonction?",
    "Que fait cette fonction? const double = x => x * 2;": "Que fait cette fonction? const double = x => x * 2;",
    "Que fait cette fonction? lambda x: x**2": "Que fait cette fonction? lambda x: x**2",
    "Que fait la destructuration: const {name, age} = user;": "Que fait la destructuration: const {name, age} = user;",
    "Que fait le décorateur @property?": "Que fait le décorateur @property?",
    "Que fait le spread operator (...) avec les objets?": "Que fait le spread operator (...) avec les objets?",
    "Que produit: [x*2 for x in range(3)]": "Que produit: [x*2 for x in range(3)]",
    "Que va afficher ce code?\nfor (var i = 0; i < 3; i++) {\n  setTimeout(() => console.log(i), 100);\n}": "Que va afficher ce code?\nfor (var i = 0; i < 3; i++) {\n  setTimeout(() => console.log(i), 100);\n}",
    "Quel bloc s'exécute toujours, même en cas d'exception?": "Quel bloc s'exécute toujours, même en cas d'exception?",
    "Quel est l'avantage principal d'un set par rapport à une list?": "Quel est l'avantage principal d'un set par rapport à une list?",
    "Quel est le résultat de: '5' + 3 + 2;": "Quel est le résultat de: '5' + 3 + 2;",
    "Quel est le résultat de: [1, 2, 3].map(x => x * 2);": "Quel est le résultat de: [1, 2, 3].map(x => x * 2);",
    "Quel est le résultat de: console.log(typeof null);": "Quel est le résultat de: console.log(typeof null);",
    "Quel est le résultat de: print(type([]))": "Quel est le résultat de: print(type([]))",
    "Quelle bibliothèque est standard pour les requêtes HTTP en Python?": "Quelle bibliothèque est standard pour les requêtes HTTP en Python?",
    "Quelle est la différence entre une Promise et async/await?": "Quelle est la différence entre une Promise et async/await?",
    "Quelle est la différence entre une liste et un tuple?": "Quelle est la différence entre une liste et un tuple?",
    "Quelle est la différence entre yield et return?": "Quelle est la différence entre yield et return?",
    "Quelle est la différence principale entre 'let' et 'var'?": "Quelle est la différence principale entre 'let' et 'var'?",
    "Quelle méthode est la plus efficace pour concaténer de nombreuses strings?": "Quelle méthode est la plus efficace pour concaténer de nombreuses strings?",
    "Quelle méthode est la plus performante pour chercher dans un grand array?": "Quelle méthode est la plus performante pour chercher dans un grand array?",
    "Quelle méthode moderne remplace getElementById?": "Quelle méthode moderne remplace getElementById?",
    "Rend la méthode privée": "Rend la méthode privée",
    "Supporte l'indexation": "Supporte l'indexation",
    "Supprime l'objet": "Supprime l'objet",
    "Supprime name et age de user": "Supprime name et age de user",
    "Toutes ces méthodes permettent d'accéder à une propriété de manière sécurisée, l'optional chaining (?.) étant la plus moderne.": "Toutes ces méthodes permettent d'accéder à une propriété de manière sécurisée, l'optional chaining (?.) étant la plus moderne.",
    "Toutes les réponses ci-dessus": "Toutes les réponses ci-dessus",
    "Toutes sont équivalentes": "Toutes sont équivalentes",
    "Transforme une méthode en attribut": "Transforme une méthode en attribut",
    "Un décorateur est une fonction qui modifie ou étend le comportement d'une autre fonction.": "Un décorateur est une fonction qui modifie ou étend le comportement d'une autre fonction.",
    "Un set garantit l'unicité des éléments et offre une recherche en temps constant.": "Un set garantit l'unicité des éléments et offre une recherche en temps constant.",
    "[0, 1, 2]": "[0, 1, 2]",
    "[0, 2, 4, 6]": "[0, 2, 4, 6]",
    "[0, 2, 4]": "[0, 2, 4]",
    "[1, 2, 3, 2, 4, 6]": "[1, 2, 3, 2, 4, 6]",
    "[2, 4, 6]": "[2, 4, 6]",
    "[] crée une liste vide en Python, et type() retourne la classe 'list'.": "[] crée une liste vide en Python, et type() retourne la classe 'list'.",
    "async/await est du sucre syntaxique pour les Promises": "async/await est du sucre syntaxique pour les Promises",
    "async/await facilite l'écriture et la lecture du code asynchrone, mais utilise les Promises en arrière-plan.": "async/await facilite l'écriture et la lecture du code asynchrone, mais utilise les Promises en arrière-plan.",
    "async/await remplace complètement les Promises": "async/await remplace complètement les Promises",
    "const calculate = require('./module.js')": "const calculate = require('./module.js')",
    "dict.get('name')": "dict.get('name')",
    "dict.get('name', 'default')": "dict.get('name', 'default')",
    "dict['name'] if 'name' in dict else None": "dict['name'] if 'name' in dict else None",
    "else": "else",
    "event.cancel()": "event.cancel()",
    "event.preventDefault()": "event.preventDefault()",
    "event.stopPropagation()": "event.stopPropagation()",
    "except": "except",
    "f'{string1}{string2}{string3}'": "f'{string1}{string2}{string3}'",
    "finally": "finally",
    "find": "find",
    "find() pour trouver un élément": "find() pour trouver un élément",
    "from math import sqrt": "from math import sqrt",
    "getElementsByClassName": "getElementsByClassName",
    "getElementsByTagName": "getElementsByTagName",
    "http": "http",
    "import * as calculate from './module.js'": "import * as calculate from './module.js'",
    "import calculate from './module.js'": "import calculate from './module.js'",
    "import math as sqrt": "import math as sqrt",
    "import math.sqrt": "import math.sqrt",
    "import sqrt from math": "import sqrt from math",
    "import { calculate } from './module.js'": "import { calculate } from './module.js'",
    "includes() pour vérifier l'existence": "includes() pour vérifier l'existence",
    "indexOf() pour obtenir l'index": "indexOf() pour obtenir l'index",
    "indexOf() s'arrête dès qu'il trouve l'élément et retourne directement l'index, souvent plus rapide que find().": "indexOf() s'arrête dès qu'il trouve l'élément et retourne directement l'index, souvent plus rapide que find().",
    "join() est plus efficace pour de nombreuses concaténations car elle évite de créer de multiples objets intermédiaires.": "join() est plus efficace pour de nombreuses concaténations car elle évite de créer de multiples objets intermédiaires.",
    "let a une portée de bloc, var a une portée de fonction": "let a une portée de bloc, var a une portée de fonction",
    "let est limitée au bloc où elle est déclarée, tandis que var a une portée de fonction ou globale.": "let est limitée au bloc où elle est déclarée, tandis que var a une portée de fonction ou globale.",
    "let est plus rapide que var": "let est plus rapide que var",
    "let ne peut pas être redéclarée, var peut l'être": "let ne peut pas être redéclarée, var peut l'être",
    "preventDefault() empêche l'action par défaut de l'événement (ex: soumission de formulaire).": "preventDefault() empêche l'action par défaut de l'événement (ex: soumission de formulaire).",
    "querySelector": "querySelector",
    "querySelector est plus flexible et moderne, permettant d'utiliser tous les sélecteurs CSS.": "querySelector est plus flexible et moderne, permettant d'utiliser tous les sélecteurs CSS.",
    "range(3) génère [0,1,2], la compréhension multiplie chaque élément par 2.": "range(3) génère [0,1,2], la compréhension multiplie chaque élément par 2.",
    "requests": "requests",
    "return false": "return false",
    "string1 + string2 + string3": "string1 + string2 + string3",
    "try": "try",
    "undefined": "undefined",
    "undefined undefined undefined": "undefined undefined undefined",
    "urllib": "urllib",
    "urllib fait partie de la bibliothèque standard. 'requests' est populaire mais externe.": "urllib fait partie de la bibliothèque standard. 'requests' est populaire mais externe.",
    "user.hasOwnProperty('name') ? user.name : undefined": "user.hasOwnProperty('name') ? user.name : undefined",
    "user.name || undefined": "user.name || undefined",
    "user?.name": "user?.name",
    "yield crée un générateur qui peut être repris, return termine définitivement la fonction.": "yield crée un générateur qui peut être repris, return termine définitivement la fonction.",
    "yield est plus rapide": "yield est plus rapide",
    "yield ne peut être utilisé que dans les classes": "yield ne peut être utilisé que dans les classes",
    "yield pause la fonction, return l'arrête": "yield pause la fonction, return l'arrête",
    "À quoi sert un décorateur en Python?": "À quoi sert un décorateur en Python?",
    ".filter('column > 10')": ".filter('column > 10')",
    ".groupBy('column').count()": ".groupBy('column').count()",
    ".orderBy('column')": ".orderBy('column')",
    ".select('column').distinct()": ".select('column').distinct()",
    "Ajoute tous les fichiers modifiés à l'index": "Ajoute tous les fichiers modifiés à l'index",
    "Ajoute un seul fichier à l'index": "Ajoute un seul fichier à l'index",
    "Analysez ce conflit Git. Quelle est la bonne résolution?": "Analysez ce conflit Git. Quelle est la bonne résolution?",
    "Analysez cette architecture Docker. Quel composant manque?": "Analysez cette architecture Docker. Quel composant manque?",
    "Analysez cette architecture Spark. Quel composant manque?": "Analysez cette architecture Spark. Quel composant manque?",
    "Analysez cette capture d'écran de l'interface Spark UI. Que pouvez-vous déduire?": "Analysez cette capture d'écran de l'interface Spark UI. Que pouvez-vous déduire?",
    "Annuler le merge complètement": "Annuler le merge complètement",
    "Architecture de base de données": "Architecture de base de données",
    "Architecture maître-esclave avec Driver et Executors": "Architecture maître-esclave avec Driver et Executors",
    "Arrête un conteneur existant": "Arrête un conteneur existant",
    "C'est un type de merge automatique": "C'est un type de merge automatique",
    "CMD s'exécute pendant le build, ENTRYPOINT au runtime": "CMD s'exécute pendant le build, ENTRYPOINT au runtime",
    "COPY source inexistante": "COPY source inexistante",
    "Catalyst est l'optimiseur de requêtes de Spark SQL qui améliore automatiquement les performances des requêtes.": "Catalyst est l'optimiseur de requêtes de Spark SQL qui améliore automatiquement les performances des requêtes.",
    "Ce Dockerfile présente plusieurs erreurs: pas de FROM, syntaxe RUN incorrecte, et COPY vers un fichier qui n'existe pas.": "Ce Dockerfile présente plusieurs erreurs: pas de FROM, syntaxe RUN incorrecte, et COPY vers un fichier qui n'existe pas.",
    "Ce code utilise spark.read.csv() pour lire un fichier CSV et .show() pour afficher les données.": "Ce code utilise spark.read.csv() pour lire un fichier CSV et .show() pour afficher les données.",
    "Cluster Manager": "Cluster Manager",
    "Combiner les deux versions et supprimer les marqueurs": "Combiner les deux versions et supprimer les marqueurs",
    "Comment annuler le dernier commit sans perdre les changements?": "Comment annuler le dernier commit sans perdre les changements?",
    "Comment créer une nouvelle branche et basculer dessus en une seule commande?": "Comment créer une nouvelle branche et basculer dessus en une seule commande?",
    "Comment limiter la mémoire d'un conteneur à 512MB?": "Comment limiter la mémoire d'un conteneur à 512MB?",
    "Comment monter un volume pour persister des données?": "Comment monter un volume pour persister des données?",
    "Comment optimiser les performances d'un job Spark?": "How to optimize Spark job performance?",
    "Compile les images Docker plus rapidement": "Compile les images Docker plus rapidement",
    "Complétez ce Dockerfile pour exposer le port 3000:": "Complétez ce Dockerfile pour exposer le port 3000:",
    "Complétez ce code pour grouper par département et calculer le salaire moyen:": "Complétez ce code pour grouper par département et calculer le salaire moyen:",
    "Complétez cette commande pour fusionner la branche feature dans main:": "Complétez cette commande pour fusionner la branche feature dans main:",
    "Complétez le code manquant dans cette fonction Spark:": "Complétez le code manquant dans cette fonction Spark:",
    "Compose de la musique avec Docker": "Compose de la musique avec Docker",
    "Compresse les images Docker": "Compresse les images Docker",
    "Compte le nombre de personnes": "Compte le nombre de personnes",
    "Configure un réseau host": "Configure un réseau host",
    "Connecte à une base de données": "Connecte à une base de données",
    "Construit une image avec le tag 'monapp' depuis le répertoire courant": "Construit une image avec le tag 'monapp' depuis le répertoire courant",
    "Construit une nouvelle image": "Construit une nouvelle image",
    "Container Runtime": "Container Runtime",
    "Copier des fichiers dans l'image": "Copier des fichiers dans l'image",
    "Crée un RDD vide": "Crée un RDD vide",
    "Crée un nouveau commit": "Crée un nouveau commit",
    "Crée un réseau bridge personnalisé": "Crée un réseau bridge personnalisé",
    "Dans GitHub, le vert indique les lignes ajoutées et le rouge les lignes supprimées dans un diff.": "Dans GitHub, le vert indique les lignes ajoutées et le rouge les lignes supprimées dans un diff.",
    "Dans Spark Streaming, qu'est-ce qu'un DStream?": "Dans Spark Streaming, qu'est-ce qu'un DStream?",
    "Dans ce fichier docker-compose.yml, quel service démarre en premier?": "Dans ce fichier docker-compose.yml, quel service démarre en premier?",
    "Dans cet exemple Docker Compose, quel service démarrera en premier?": "Dans cet exemple Docker Compose, quel service démarrera en premier?",
    "Dans cette interface GitHub, que représentent les différentes couleurs?": "Dans cette interface GitHub, que représentent les différentes couleurs?",
    "Data Stream - un flux de données continu": "Data Stream - un flux de données continu",
    "Depuis la branche main, 'git merge feature' fusionne la branche feature dans main.": "Depuis la branche main, 'git merge feature' fusionne la branche feature dans main.",
    "Des fichiers modifiés et non trackés": "Des fichiers modifiés et non trackés",
    "Discretized Stream - une séquence de RDDs": "Discretized Stream - une séquence de RDDs",
    "Distributed Stream - un stream distribué": "Distributed Stream - un stream distribué",
    "Docker Client": "Docker Client",
    "Docker Compose permet de définir et gérer des applications composées de plusieurs conteneurs.": "Docker Compose permet de définir et gérer des applications composées de plusieurs conteneurs.",
    "Docker Daemon": "Docker Daemon",
    "Docker Registry": "Docker Registry",
    "Driver Program": "Driver Program",
    "Dynamic Stream - un stream dynamique": "Dynamic Stream - un stream dynamique",
    "Définir le répertoire de travail": "Définir le répertoire de travail",
    "Désactive le réseau": "Désactive le réseau",
    "ENTRYPOINT définit la commande fixe du conteneur, tandis que CMD peut être surchargée lors du docker run.": "ENTRYPOINT définit la commande fixe du conteneur, tandis que CMD peut être surchargée lors du docker run.",
    "ENTRYPOINT est pour les scripts, CMD pour les commandes": "ENTRYPOINT est pour les scripts, CMD pour les commandes",
    "ENTRYPOINT ne peut pas être surchargé au runtime, CMD peut l'être": "ENTRYPOINT ne peut pas être surchargé au runtime, CMD peut l'être",
    "EXPOSE 3000": "EXPOSE 3000",
    "Executors": "Executors",
    "Exposer un port": "Exposer un port",
    "FROM instruction manquante": "FROM instruction manquante",
    "Filtre les lignes où age > 18": "Filtre les lignes où age > 18",
    "Garder la version HEAD et supprimer les marqueurs": "Garder la version HEAD et supprimer les marqueurs",
    "Garder la version incoming et supprimer les marqueurs": "Garder la version incoming et supprimer les marqueurs",
    "Git utilise un algorithme optimisé": "Git utilise un algorithme optimisé",
    "Grâce à 'depends_on', Docker Compose démarre d'abord les dépendances (database) avant les services qui en dépendent.": "Grâce à 'depends_on', Docker Compose démarre d'abord les dépendances (database) avant les services qui en dépendent.",
    "Grâce à 'depends_on', le service database doit démarrer avant web et redis.": "Grâce à 'depends_on', le service database doit démarrer avant web et redis.",
    "Identifiez la commande Git manquante dans ce workflow:": "Identifiez la commande Git manquante dans ce workflow:",
    "Il n'y a aucune donnée traitée": "Il n'y a aucune donnée traitée",
    "Il y a 3 jobs en cours d'exécution": "Il y a 3 jobs en cours d'exécution",
    "Il y a des conflits à résoudre": "Il y a des conflits à résoudre",
    "Ils démarrent en parallèle": "Ils démarrent en parallèle",
    "Ils démarrent simultanément": "Ils démarrent simultanément",
    "L'architecture montre le client et le daemon, mais il manque le registry qui stocke les images.": "L'architecture montre le client et le daemon, mais il manque le registry qui stocke les images.",
    "L'instruction EXPOSE indique que le conteneur écoute sur le port spécifié au runtime.": "L'instruction EXPOSE indique que le conteneur écoute sur le port spécifié au runtime.",
    "L'instruction FROM définit l'image de base sur laquelle construire la nouvelle image Docker.": "L'instruction FROM définit l'image de base sur laquelle construire la nouvelle image Docker.",
    "L'interface Docker Desktop montre l'onglet Containers avec la liste des conteneurs et leur statut.": "L'interface Docker Desktop montre l'onglet Containers avec la liste des conteneurs et leur statut.",
    "L'interface montre l'onglet SQL de Spark UI avec l'historique des requêtes SQL exécutées et leurs métriques.": "L'interface montre l'onglet SQL de Spark UI avec l'historique des requêtes SQL exécutées et leurs métriques.",
    "L'onglet Executors avec les workers": "L'onglet Executors avec les workers",
    "L'onglet Jobs avec les tâches en cours": "L'onglet Jobs avec les tâches en cours",
    "L'onglet SQL avec les requêtes exécutées": "L'onglet SQL avec les requêtes exécutées",
    "L'onglet Storage avec les RDDs cachés": "L'onglet Storage avec les RDDs cachés",
    "L'optimisation Spark nécessite plusieurs techniques : cache, partitioning, et minimisation des shuffles.": "L'optimisation Spark nécessite plusieurs techniques : cache, partitioning, et minimisation des shuffles.",
    "L'option -v (ou --volume) permet de monter un répertoire hôte dans le conteneur pour persister les données.": "L'option -v (ou --volume) permet de monter un répertoire hôte dans le conteneur pour persister les données.",
    "LISTEN 3000": "LISTEN 3000",
    "La branche cible n'a pas de nouveaux commits depuis la création de la branche source": "La branche cible n'a pas de nouveaux commits depuis la création de la branche source",
    "La branche est en avance sur origin": "La branche est en avance sur origin",
    "La colonne Duration montre que le Job 0 a une durée de 2.5s, indiquant le temps d'exécution.": "La colonne Duration montre que le Job 0 a une durée de 2.5s, indiquant le temps d'exécution.",
    "La commande 'docker images' liste toutes les images Docker présentes localement.": "La commande 'docker images' liste toutes les images Docker présentes localement.",
    "La commande 'docker run -it' lance un conteneur en mode interactif (-i) avec un pseudo-terminal (-t).": "La commande 'docker run -it' lance un conteneur en mode interactif (-i) avec un pseudo-terminal (-t).",
    "La commande 'git add .' ajoute tous les fichiers modifiés du répertoire courant à l'index (staging area).": "La commande 'git add .' ajoute tous les fichiers modifiés du répertoire courant à l'index (staging area).",
    "La commande 'git init' initialise un nouveau dépôt Git dans le répertoire courant.": "La commande 'git init' initialise un nouveau dépôt Git dans le répertoire courant.",
    "La commande 'git log --graph' affiche l'historique des commits sous forme de graphique ASCII.": "La commande 'git log --graph' affiche l'historique des commits sous forme de graphique ASCII.",
    "La commande build avec -t assigne un tag, et le '.' indique d'utiliser le Dockerfile du répertoire courant.": "La commande build avec -t assigne un tag, et le '.' indique d'utiliser le Dockerfile du répertoire courant.",
    "La configuration montre un réseau bridge personnalisé permettant la communication entre conteneurs.": "La configuration montre un réseau bridge personnalisé permettant la communication entre conteneurs.",
    "La configuration réseau": "La configuration réseau",
    "La liste des conteneurs en cours d'exécution": "La liste des conteneurs en cours d'exécution",
    "La sortie git status montre des fichiers modifiés (en rouge) et des fichiers non trackés.": "La sortie git status montre des fichiers modifiés (en rouge) et des fichiers non trackés.",
    "Lance un conteneur en mode interactif avec un terminal": "Lance un conteneur en mode interactif avec un terminal",
    "Lance un conteneur nommé 'monapp'": "Lance un conteneur nommé 'monapp'",
    "Le code utilise filter() pour ne garder que les lignes où la colonne age est supérieure à 18.": "Le code utilise filter() pour ne garder que les lignes où la colonne age est supérieure à 18.",
    "Le diagramme montre Driver et Executors, mais il manque le Cluster Manager qui gère les ressources.": "Le diagramme montre Driver et Executors, mais il manque le Cluster Manager qui gère les ressources.",
    "Le diagramme montre l'architecture classique de Spark avec un Driver qui coordonne les Executors sur les worker nodes.": "Le diagramme montre l'architecture classique de Spark avec un Driver qui coordonne les Executors sur les worker nodes.",
    "Le job 0 a pris 2.5 secondes à s'exécuter": "Le job 0 a pris 2.5 secondes à s'exécuter",
    "Le merge se fait très rapidement": "Le merge se fait très rapidement",
    "Le workflow montre une feature branch qui doit être fusionnée avec main, la commande manquante est git merge.": "Le workflow montre une feature branch qui doit être fusionnée avec main, la commande manquante est git merge.",
    "Le workflow standard Git est : 1) Ajouter les changements (add), 2) Créer un commit, 3) Pousser vers le remote.": "Le workflow standard Git est : 1) Ajouter les changements (add), 2) Créer un commit, 3) Pousser vers le remote.",
    "Les couleurs n'ont pas de signification": "Les couleurs n'ont pas de signification",
    "Les images disponibles localement": "Les images disponibles localement",
    "Les inclure directement dans le Dockerfile": "Les inclure directement dans le Dockerfile",
    "Les logs d'un conteneur spécifique": "Les logs d'un conteneur spécifique",
    "Les mettre dans l'image": "Les mettre dans l'image",
    "Les passer en arguments de build": "Les passer en arguments de build",
    "Les réponses A et B sont correctes": "Les réponses A et B sont correctes",
    "Les réponses A et C sont correctes": "Les réponses A et C sont correctes",
    "Les secrets ne doivent jamais être inclus dans les images. Il faut utiliser Docker Secrets ou des solutions externes.": "Les secrets ne doivent jamais être inclus dans les images. Il faut utiliser Docker Secrets ou des solutions externes.",
    "Les transformations dans Spark sont évaluées de manière paresseuse (lazy), tandis que les actions déclenchent l'exécution.": "Les transformations dans Spark sont évaluées de manière paresseuse (lazy), tandis que les actions déclenchent l'exécution.",
    "Les transformations sont lazy, les actions sont immédiates": "Les transformations sont lazy, les actions sont immédiates",
    "Lit un fichier CSV et affiche les premières lignes": "Lit un fichier CSV et affiche les premières lignes",
    "OPEN 3000": "OPEN 3000",
    "Orchestre des applications multi-conteneurs": "Orchestre des applications multi-conteneurs",
    "PORT 3000": "PORT 3000",
    "Partitionner correctement les données": "Partitionner correctement les données",
    "Pipeline de transformation de données": "Pipeline de transformation de données",
    "Pour compter les occurrences par groupe, on utilise groupBy() suivi de count().": "Pour compter les occurrences par groupe, on utilise groupBy() suivi de count().",
    "Pour résoudre un conflit, il faut combiner ou choisir les bonnes parties, puis supprimer les marqueurs de conflit.": "Pour résoudre un conflit, il faut combiner ou choisir les bonnes parties, puis supprimer les marqueurs de conflit.",
    "Qu'est-ce que le Catalyst Optimizer dans Spark?": "Qu'est-ce que le Catalyst Optimizer dans Spark?",
    "Que fait 'git rebase' par rapport à 'git merge'?": "Que fait 'git rebase' par rapport à 'git merge'?",
    "Que fait Docker Compose?": "Que fait Docker Compose?",
    "Que fait ce code Spark?": "Que fait ce code Spark?",
    "Que fait cette commande Docker?": "Que fait cette commande Docker?",
    "Que fait cette configuration de réseau Docker?": "Que fait cette configuration de réseau Docker?",
    "Que fait la commande 'docker build -t monapp .'?": "Que fait la commande 'docker build -t monapp .'?",
    "Que fait la commande 'git add .'?": "Que fait la commande 'git add .'?",
    "Que montre cette interface Docker Desktop?": "Que montre cette interface Docker Desktop?",
    "Que montre cette interface Spark UI?": "Que montre cette interface Spark UI?",
    "Que montre cette sortie de 'git status'?": "Que montre cette sortie de 'git status'?",
    "Que représente ce diagramme d'architecture Spark?": "Que représente ce diagramme d'architecture Spark?",
    "Que signifie un 'fast-forward' merge dans Git?": "Que signifie un 'fast-forward' merge dans Git?",
    "Quel est le problème dans ce Dockerfile?": "Quel est le problème dans ce Dockerfile?",
    "Quel est le rôle de l'instruction FROM dans un Dockerfile?": "Quel est le rôle de l'instruction FROM dans un Dockerfile?",
    "Quelle commande Git permet d'initialiser un nouveau dépôt?": "Quelle commande Git permet d'initialiser un nouveau dépôt?",
    "Quelle commande permet de lister toutes les images Docker locales?": "Quelle commande permet de lister toutes les images Docker locales?",
    "Quelle commande permet de voir l'historique des commits de façon graphique?": "Quelle commande permet de voir l'historique des commits de façon graphique?",
    "Quelle est la différence entre CMD et ENTRYPOINT dans un Dockerfile?": "Quelle est la différence entre CMD et ENTRYPOINT dans un Dockerfile?",
    "Quelle est la différence entre coalesce() et repartition()?": "Quelle est la différence entre coalesce() et repartition()?",
    "Quelle est la différence entre une image Docker et un conteneur?": "Quelle est la différence entre une image Docker et un conteneur?",
    "Quelle est la différence entre une transformation et une action dans Spark?": "Quelle est la différence entre une transformation et une action dans Spark?",
    "Quelle est la meilleure pratique pour les secrets dans Docker?": "Quelle est la meilleure pratique pour les secrets dans Docker?",
    "Quelle est la séquence de commandes correcte pour ce workflow Git?": "Quelle est la séquence de commandes correcte pour ce workflow Git?",
    "RDD signifie Resilient Distributed Dataset, c'est la structure de données fondamentale de Spark.": "RDD signifie Resilient Distributed Dataset, c'est la structure de données fondamentale de Spark.",
    "RUN commands mal formatées": "RUN commands mal formatées",
    "Rapid Data Distribution": "Rapid Data Distribution",
    "Real-time Data Delivery": "Real-time Data Delivery",
    "Rebase crée des conflits, merge non": "Rebase crée des conflits, merge non",
    "Rebase déplace les commits pour créer un historique linéaire, tandis que merge préserve l'historique des branches.": "Rebase déplace les commits pour créer un historique linéaire, tandis que merge préserve l'historique des branches.",
    "Rebase est plus rapide que merge": "Rebase est plus rapide que merge",
    "Rebase réécrit l'historique, merge le préserve": "Rebase réécrit l'historique, merge le préserve",
    "Remote Database Driver": "Remote Database Driver",
    "Sauvegarde un DataFrame": "Sauvegarde un DataFrame",
    "Setup un réseau overlay pour swarm": "Setup un réseau overlay pour swarm",
    "Soit 'git checkout -b' soit 'git switch -c' permettent de créer et basculer sur une nouvelle branche.": "Soit 'git checkout -b' soit 'git switch -c' permettent de créer et basculer sur une nouvelle branche.",
    "Soit -m soit --memory permettent de limiter la mémoire, avec des unités comme 512m ou 512MB.": "Soit -m soit --memory permettent de limiter la mémoire, avec des unités comme 512m ou 512MB.",
    "Spark propose plusieurs syntaxes équivalentes pour calculer la moyenne : avg(), mean(), et agg(avg()).": "Spark propose plusieurs syntaxes équivalentes pour calculer la moyenne : avg(), mean(), et agg(avg()).",
    "Spécifier l'image de base à utiliser": "Spécifier l'image de base à utiliser",
    "Supprime l'image 'monapp'": "Supprime l'image 'monapp'",
    "Supprime tous les fichiers": "Supprime tous les fichiers",
    "Supprime un conteneur": "Supprime un conteneur",
    "Système de fichiers distribué": "Système de fichiers distribué",
    "Sélectionne la colonne age": "Sélectionne la colonne age",
    "Tous les fichiers sont commités": "Tous les fichiers sont commités",
    "Tous les jobs ont échoué": "Tous les jobs ont échoué",
    "Toutes les réponses sont correctes": "Toutes les réponses sont correctes",
    "Trie par âge": "Trie par âge",
    "Télécharge l'image 'monapp' depuis Docker Hub": "Télécharge l'image 'monapp' depuis Docker Hub",
    "Un DStream (Discretized Stream) représente un flux de données comme une séquence de RDDs dans le temps.": "Un DStream (Discretized Stream) représente un flux de données comme une séquence de RDDs dans le temps.",
    "Un algorithme de machine learning": "Un algorithme de machine learning",
    "Un fast-forward merge signifie que la branche principale n'a pas évolué, Git peut simplement avancer le pointeur.": "Un fast-forward merge signifie que la branche principale n'a pas évolué, Git peut simplement avancer le pointeur.",
    "Un optimiseur de requêtes pour Spark SQL": "Un optimiseur de requêtes pour Spark SQL",
    "Un outil de monitoring des performances": "Un outil de monitoring des performances",
    "Un système de cache distribué": "Un système de cache distribué",
    "Une image Docker est un modèle en lecture seule, tandis qu'un conteneur est une instance exécutable de cette image.": "Une image Docker est un modèle en lecture seule, tandis qu'un conteneur est une instance exécutable de cette image.",
    "Une image est plus petite qu'un conteneur": "Une image est plus petite qu'un conteneur",
    "Une image est un modèle, un conteneur est une instance en cours d'exécution": "Une image est un modèle, un conteneur est une instance en cours d'exécution",
    "Une image s'exécute, un conteneur se stocke": "Une image s'exécute, un conteneur se stocke",
    "Utiliser Docker Secrets ou des variables d'environnement chiffrées": "Utiliser Docker Secrets ou des variables d'environnement chiffrées",
    "Utiliser le cache pour les RDD/DataFrames réutilisés": "Utiliser le cache pour les RDD/DataFrames réutilisés",
    "Vert = ajouts, Rouge = suppressions": "Vert = ajouts, Rouge = suppressions",
    "Vert = ajouts, Rouge = suppressions, Bleu = modifications": "Vert = ajouts, Rouge = suppressions, Bleu = modifications",
    "Vert = validé, Rouge = en attente": "Vert = validé, Rouge = en attente",
    "Worker Nodes": "Worker Nodes",
    "coalesce() augmente les partitions, repartition() les diminue": "coalesce() augmente les partitions, repartition() les diminue",
    "coalesce() combine les partitions existantes sans shuffle, tandis que repartition() redistribue les données avec shuffle.": "coalesce() combine les partitions existantes sans shuffle, tandis que repartition() redistribue les données avec shuffle.",
    "coalesce() est plus lent que repartition()": "coalesce() est plus lent que repartition()",
    "coalesce() ne provoque pas de shuffle, repartition() si": "coalesce() ne provoque pas de shuffle, repartition() si",
    "database": "database",
    "df.groupBy('department').agg(avg('salary'))": "df.groupBy('department').agg(avg('salary'))",
    "df.groupBy('department').avg('salary')": "df.groupBy('department').avg('salary')",
    "df.groupBy('department').mean('salary')": "df.groupBy('department').mean('salary')",
    "docker images": "docker images",
    "docker list images": "docker list images",
    "docker ps -a": "docker ps -a",
    "docker run --mem-limit 512m image": "docker run --mem-limit 512m image",
    "docker run --memory 512MB image": "docker run --memory 512MB image",
    "docker run --mount /host/path:/container/path image": "docker run --mount /host/path:/container/path image",
    "docker run --persist /host/path:/container/path image": "docker run --persist /host/path:/container/path image",
    "docker run --volume /host/path=/container/path image": "docker run --volume /host/path=/container/path image",
    "docker run -m 512m image": "docker run -m 512m image",
    "docker run -v /host/path:/container/path image": "docker run -v /host/path:/container/path image",
    "docker show images": "docker show images",
    "git add .": "git add .",
    "git add → git commit → git push": "git add → git commit → git push",
    "git add → git push → git commit": "git add → git push → git commit",
    "git branch nouvelle-branche && git checkout nouvelle-branche": "git branch nouvelle-branche && git checkout nouvelle-branche",
    "git checkout -b nouvelle-branche": "git checkout -b nouvelle-branche",
    "git checkout HEAD~1": "git checkout HEAD~1",
    "git commit -m 'message'": "git commit -m 'message'",
    "git commit → git add → git push": "git commit → git add → git push",
    "git history --visual": "git history --visual",
    "git log --graph": "git log --graph",
    "git merge --into feature": "git merge --into feature",
    "git merge feature": "git merge feature",
    "git merge feature main": "git merge feature main",
    "git merge feature-branch": "git merge feature-branch",
    "git merge main feature": "git merge main feature",
    "git push origin main": "git push origin main",
    "git push → git add → git commit": "git push → git add → git commit",
    "git reset --hard HEAD~1": "git reset --hard HEAD~1",
    "git reset --soft HEAD~1": "git reset --soft HEAD~1",
    "git reset --soft HEAD~1 annule le commit mais garde les changements dans l'index.": "git reset --soft HEAD~1 annule le commit mais garde les changements dans l'index.",
    "git revert HEAD": "git revert HEAD",
    "git show --graph": "git show --graph",
    "git switch -c nouvelle-branche": "git switch -c nouvelle-branche",
    "git tree": "git tree",
    "redis": "redis",
    "web": "web",
    "Éviter les shuffles inutiles": "Éviter les shuffles inutiles"
  }
}